---
const API_BASE = import.meta.env.PUBLIC_API_BASE || 'https://viajadoras-7fb3fd8a76a0.herokuapp.com'

const t = {
  title: 'Entre na lista de espera',
  desc: 'Deixe seu e‑mail para receber novidades e convite do beta.',
  name: 'Seu nome (opcional)',
  email: 'Seu e‑mail',
  phone: 'Telefone (opcional, com DDD)',
  submit: 'Quero participar',
  thanks: '/obrigada',
  policyUrl: '/privacidade'
};
---
<div class="mx-auto max-w-xl rounded-2xl border border-gray-200 p-6 dark:border-gray-800 bg-white/60 dark:bg-white/5 backdrop-blur">
  <h3 class="text-xl font-semibold">{t.title}</h3>
  <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">{t.desc}</p>
  <form id="lead-form" data-thanks={t.thanks} class="mt-6 space-y-4">
    <input type="text" name="name" placeholder={t.name} class="w-full rounded-xl border border-gray-300 bg-white px-4 py-3 text-base dark:border-gray-700 dark:bg-white/10" />
    <input type="email" name="email" placeholder={t.email} required class="w-full rounded-xl border border-gray-300 bg-white px-4 py-3 text-base dark:border-gray-700 dark:bg-white/10" />
    <input type="text" name="phone" placeholder={t.phone} class="w-full rounded-xl border border-gray-300 bg-white px-4 py-3 text-base dark:border-gray-700 dark:bg-white/10" />
    <p class="text-xs text-gray-500 dark:text-gray-400">Ao enviar, você aceita nossa <a href={t.policyUrl} class="underline">Política de Privacidade</a>.</p>
    <button type="submit" class="btn w-full">{t.submit}</button>
    <p id="lead-error" class="hidden text-sm text-error-600">Ops, não foi possível enviar. Tente novamente.</p>
  </form>
  <script define:vars={{ thanks: t.thanks, api: API_BASE }}>
    const apiBase = (api || '').replace(/\/+$/, '');
    const form = document.getElementById('lead-form');
    const err = document.getElementById('lead-error');
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      err?.classList.add('hidden');
      const data = Object.fromEntries(new FormData(form));
      const payload = {
        name: (data.name || '').toString().trim() || undefined,
        email: (data.email || '').toString().trim(),
        phone: (data.phone || '').toString().trim() || undefined,
      };
      try {
        const res = await fetch(`${apiBase}/leads`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload),
        });
        window.plausible && window.plausible('lead_submit');
        if (res.ok || res.status === 409) {
          window.location.href = thanks;
        } else {
          err?.classList.remove('hidden');
        }
      } catch (e) {
        err?.classList.remove('hidden');
      }
    });
  </script>
</div>
